name: MuleSoft Code Quality Check

# This workflow calls the reusable workflow from your common repository
on:
  push:
    branches: [ main, develop, dev, staging ]
  pull_request:
    branches: [ main, develop, dev ]

jobs:
  quality-check:
    name: Run Mule Guardian Analysis
    uses: guptamanish55/mulesoft-code-review-agent/.github/workflows/mule-guardian-quality-check.yml@main
    with:
      # Customize these parameters for each application repository
      compliance_threshold: 75              # Adjust per project (60-95)
      pmd_version: '7.0.0'                 # PMD version to use
      analysis_target: '.'                 # Directory to analyze (change if needed)
      project_name: 'Customer API'         # Name of this project
      skip_quality_gate: false             # Set to true for debugging
    
  # Optional: Add post-analysis steps
  post-analysis:
    name: Post Analysis Actions
    runs-on: ubuntu-latest
    needs: quality-check
    if: always()  # Run even if quality check fails
    
    steps:
    - name: Print Analysis Results
      run: |
        echo "üõ°Ô∏è Mule Guardian Analysis Complete!"
        echo "üìä Compliance Score: ${{ needs.quality-check.outputs.compliance_score }}%"
        echo "üîç Total Violations: ${{ needs.quality-check.outputs.total_violations }}"
        echo "‚úÖ Quality Gate: ${{ needs.quality-check.outputs.quality_gate_passed }}"
        
    # Optional: Send notifications (Slack, Teams, etc.)
    - name: Notify Team (Example)
      if: needs.quality-check.outputs.quality_gate_passed == 'false'
      run: |
        echo "üö® Quality gate failed - notify team"
        # Add your notification logic here (Slack webhook, email, etc.)
        
    # Optional: Create GitHub issue for failed quality gates
    - name: Create Quality Issue
      if: needs.quality-check.outputs.quality_gate_passed == 'false' && github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          const compliance = '${{ needs.quality-check.outputs.compliance_score }}';
          const violations = '${{ needs.quality-check.outputs.total_violations }}';
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `üö® Code Quality Gate Failed - ${compliance}% compliance`,
            body: `
            ## Code Quality Analysis Failed
            
            **Compliance Score:** ${compliance}%  
            **Total Violations:** ${violations}  
            **Required Threshold:** 75%
            
            ### Action Required
            - Review the Mule Guardian quality report
            - Address high and medium priority violations
            - Re-run analysis after fixes
            
            **Reports:** Check the GitHub Actions artifacts for detailed analysis.
            
            *This issue was automatically created by Mule Guardian.*
            `,
            labels: ['quality-gate', 'bug', 'high-priority']
          });
